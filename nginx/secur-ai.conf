upstream backend-nestjs {
    server localhost:3002;
    keepalive 64;
}

upstream frontend-react {
    server localhost:3000;
    keepalive 64;
}

upstream frontend-test {
    server localhost:3001;
    keepalive 64;
}

server {
    listen 80;
    server_name localhost;
    return 301 https://$host$request_uri;
}

server {
    listen 443 ssl;
    server_name localhost;

    ssl_certificate /etc/ssl/certs/securai.crt;
    ssl_certificate_key /etc/ssl/private/securai.key;


    # Frontend (React)
    location / {
        proxy_pass http://frontend-react;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header Cookie $http_cookie;
        include proxy_params;
    }

    location /test/ {
        rewrite ^/test/(.*)$ /$1 break;
        proxy_pass http://frontend-test;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header Cookie $http_cookie;
        include proxy_params;
    }

    # Backend (NestJS API + WebSocket)
    location /api/ {
        rewrite ^/api/(.*)$ /$1 break;
        proxy_pass http://backend-nestjs;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;
        include proxy_params;
    }

    location /socket.io/ {
        proxy_pass http://backend-nestjs;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_read_timeout 60s;
        proxy_send_timeout 60s;
    }


    # Health check
    location /healthz {
        return 200 'OK';
        add_header Content-Type text/plain;
    }
}